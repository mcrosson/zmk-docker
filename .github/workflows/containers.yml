name: Containers

env:
  zephyr-version: 2.4.0
  zephyr-toolchain-version: 0.11.4

on:
  push:
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1 # takes advantage of caching between types
      matrix:
        target: # ordered from smallest to biggest to take advantage of the registry cache
          - build
          - dev
        platform:
          - arm
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Prepare tags
        id: tags
        run: |
          NAME=zmk-${{ matrix.target }}-${{ matrix.platform }}
          echo ::set-output name=name::${NAME}

          CACHE=zmk-cache-${{ matrix.platform }}
          echo ::set-output name=cache::${CACHE}

          CANDIDATE=${NAME}:${{ env.zephyr-version }}-${{ env.zephyr-toolchain-version }}-${{ github.sha }}
          echo ::set-output name=candidate::${CANDIDATE}

          RELEASE=${NAME}:${{ env.zephyr-version }}
          echo ::set-output name=release::${RELEASE}

          GIT=refs/tags/${{ env.zephyr-version }}-${{ env.zephyr-toolchain-version }}
          echo ::set-output name=git::${GIT}
      - name: Set up QEMU
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        uses: docker/setup-buildx-action@v1
      - name: Build and push (candidate)
        id: build-push
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        uses: docker/build-push-action@v2
        with:
          target: ${{ matrix.target }}
          build-args: |
            ZEPHYR_VERSION=${{ env.zephyr-version }}
            ZEPHYR_TOOLCHAIN_PLATFORM=${{ matrix.platform }}
            ZEPHYR_TOOLCHAIN_VERSION=${{ env.zephyr-toolchain-version }}
            REPOSITORY_URL=${{ github.server_url }}/${{ github.repository }}
          tags: |
            ghcr.io/${{ github.actor }}/${{ steps.tags.outputs.candidate }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.tags.outputs.candidate }}
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.tags.outputs.cache }},push=false
          cache-to: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.tags.outputs.cache }},mode=max,push=true
          push: true
      - name: Image digest
        if: ${{ !startsWith(github.ref, 'refs/tags') }}
        run: echo ${{ steps.build-push.outputs.digest }}
      - name: Release (pull candidate, tag release, push)
        if: ${{ github.ref == steps.tags.outputs.git }}
        run: |
          docker pull ghcr.io/${{ github.actor }}/${{ steps.tags.outputs.candidate }}
          docker tag ghcr.io/${{ github.actor }}/${{ steps.tags.outputs.candidate }} ghcr.io/${{ github.actor }}/${{ steps.tags.outputs.release }}
          docker tag ghcr.io/${{ github.actor }}/${{ steps.tags.outputs.candidate }} docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.tags.outputs.release }}
          docker push ghcr.io/${{ github.actor }}/${{ steps.tags.outputs.release }}
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.tags.outputs.release }}
